{"version":3,"file":"index.js","sources":["../../src/layout/MenuBar-2/scripts/ButtonHamburger.js","../../src/layout/MenuBar-2/scripts/MenuSticky.js","../../src/layout/MenuBar-2/scripts/MenuHighlight.js","../../src/layout/MenuBar-2/MenuBar.js","../../src/layout/MenuBar-2/MenuBar.html?raw","../../main.js"],"sourcesContent":["\r\nconst run = () =>{\r\n \r\n    const menuHamburger = document.querySelector(\".button-hamburger\");\r\n    const nav = document.querySelector(\"nav\");\r\n    \r\n    menuHamburger.addEventListener(\"click\", () => {\r\n        menuHamburger.classList.toggle(\"open\");\r\n        nav.classList.toggle(\"show-nav\");\r\n    });\r\n};\r\n\r\n\r\nexport default {\r\n    run\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\nconst events = [\"load\", \"resize\", \"scroll\"];\r\n\r\n// menu sticky\r\nlet navbar = null; \r\nlet buttonSticky = null;\r\nlet menuList = null;\r\n\r\nconst run = () => {\r\n    // elements DOM\r\n    navbar = document.querySelector(\".sidebar\");\r\n    buttonSticky = document.querySelector(\".button-sticky\");\r\n    menuList = document.querySelector(\".menu\");\r\n\r\n\r\n    /** \r\n     * offset (traducciÃ³n: compensar) - indicates the distance (offset) between the navbar and\r\n     * the position of the scroll with respect to the height of the screen\r\n     **/\r\n\r\n    let offset = 0;\r\n    let previousScrollY = 0;\r\n\r\n    for (let event of events) {\r\n        window.addEventListener(event, () => {\r\n\r\n            // responsive design mobile \r\n            if (window.innerWidth < 730) {\r\n                \r\n                \r\n                const currentScrollY = document['documentElement' || 'body'].scrollTop;\r\n                const currentPositionScroll = currentScrollY - previousScrollY;\r\n\r\n                previousScrollY = currentScrollY;\r\n                offset += currentPositionScroll;\r\n\r\n                const navbarHeight = navbar.clientHeight;\r\n\r\n                // 1. the navbar is not visible\r\n                if (offset > navbarHeight) {\r\n                    offset = navbarHeight;\r\n                }\r\n\r\n                // 2. the navbar is visible and I exceed the height of the navbar when slide up scroll\r\n                if (offset < 0) {\r\n                    offset = 0;\r\n                }\r\n\r\n                // elements DOM to modify\r\n                navbar.style.top = `${-(offset)}px`;\r\n                buttonSticky.style.top = `${ (navbarHeight - offset) - 1 }px`;\r\n                menuList.style.top = `${ (navbarHeight + buttonSticky.clientHeight) - 1 }px`;\r\n\r\n\r\n            } else {\r\n\r\n                // remove property top when is full screen\r\n                navbar.style.removeProperty('top');\r\n                buttonSticky.style.removeProperty('top');\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nconst convertElementToSticky = (  elementSticky )  => {\r\n\r\n}\r\n\r\nexport default {\r\n    run\r\n};\r\n\r\n","\r\nconst events = [\"scroll\", 'load'];\r\n\r\nlet menubarHeight = 0;\r\nlet lastWidthScreen = 0;\r\n\r\n// get last Width screen\r\n((e) => {\r\n\r\n    const events = [\"load\", \"resize\"];\r\n\r\n    for (const event of events) {\r\n        window.addEventListener(event, () => {\r\n            lastWidthScreen = window.innerWidth;\r\n        });\r\n    }\r\n})();\r\n\r\n\r\nconst run = () => {\r\n\r\n    // get all sections\r\n\r\n    const sections = document.querySelectorAll(\"section\");\r\n    menubarHeight = document.querySelector(\".menu-sticky\").clientHeight;\r\n\r\n\r\n    for (const event of events) {\r\n\r\n        window.addEventListener(event, () => {\r\n\r\n            // scroll down - up\r\n            const detectSection = (getDirectionScroll()) ? 400 : 500;\r\n\r\n            const currentScrollY = window.pageYOffset;\r\n\r\n            for (const [index, section] of sections.entries()) {\r\n\r\n                // selectors DOM \r\n                const sectionId = section.getAttribute(\"id\");\r\n                const selector = document.querySelector(\r\n                    `.navigation a[name*=${sectionId}]`\r\n                );\r\n\r\n                const paddingSection = 40;\r\n\r\n                // height and top sections\r\n                const sectionHeight = (lastWidthScreen < 730) ? \r\n                section.offsetHeight + menubarHeight: \r\n                section.offsetHeight + paddingSection;\r\n\r\n                const sectionTop = section.offsetTop - detectSection;\r\n\r\n                /**\r\n                 * Gets the section that is displayed on the screen at the time of scrolling \r\n                 * and adds the corresponding styles - (intersects the menu options \r\n                 * with the section that is currently displayed)\r\n                 */\r\n\r\n                if (currentScrollY <= sectionTop + sectionHeight\r\n                    && currentScrollY > sectionTop\r\n                ) {\r\n                    selector.classList.add(\"active\");\r\n                    localStorage.setItem('currentSection', index);\r\n                }\r\n                /**\r\n                 * removes the styles when there is no longer an \r\n                 * intersection with the section that is \r\n                 * visible on the screen (intersect between menu and sections)\r\n                 */\r\n                else {\r\n                    selector.classList.remove(\"active\");\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    let lastScroll = 0;\r\n    /**\r\n     * Get the direction of the scroll,\r\n     * that is, if the scroll goes (down or up)\r\n     * @returns boolean\r\n     */\r\n\r\n    const getDirectionScroll = () => {\r\n\r\n        // get current scroll value\r\n        const currentScroll = document['documentElement' || 'body'].scrollTop;\r\n        //  when you scroll down\r\n        if (currentScroll > 0 && lastScroll <= currentScroll) {\r\n            lastScroll = currentScroll;\r\n            return true;\r\n        }\r\n        // when you scroll up\r\n        else {\r\n            lastScroll = currentScroll;\r\n            return false;\r\n        }\r\n    };\r\n};\r\n\r\nexport default {\r\n    run\r\n};\r\n\r\n\r\n","// scripts logicMenuBar-2/\r\nimport ButtonHamburger from '@layout/MenuBar-2/scripts/ButtonHamburger';\r\nimport MenuSticky from '@layout/MenuBar-2/scripts/MenuSticky';\r\nimport MenuHighlight from '@layout/MenuBar-2/scripts/MenuHighlight';\r\n\r\nlet sections = []\r\nlet navbarHeight = 0;\r\nlet lastWidthScreen = 0;\r\n\r\n// get last Width screen\r\n((e) => {\r\n\r\n    const events = [\"load\", \"resize\"];\r\n\r\n    for (const event of events) {\r\n        window.addEventListener(event, () => {\r\n            lastWidthScreen = window.innerWidth; \r\n        });\r\n    }\r\n})();\r\n\r\n\r\n// update data of the sections when change the size screen\r\n((e) => {\r\n\r\n    const events = [\"load\", \"resize\"];\r\n\r\n    for (const event of events) {\r\n        window.addEventListener(event, () => {\r\n\r\n            sections = Array.from(document.querySelectorAll(\"section\")).map(section => {\r\n                return {\r\n                    name: section.getAttribute('id'),\r\n                    top: section.offsetTop\r\n                }\r\n            });\r\n            navbarHeight = document.querySelector(\".sidebar\").clientHeight;\r\n        });\r\n    }\r\n})();\r\n\r\n\r\nconst smoothScrollContent = () => {\r\n\r\n    const options = document.querySelectorAll(\".navigation a\");\r\n\r\n    for (const option of options) {\r\n        option.addEventListener('click', (e) => {\r\n\r\n            const optionSelect = option.getAttribute('name');\r\n            const index = sections.findIndex(\r\n                element => element.name === optionSelect\r\n            );\r\n\r\n            if (index !== -1) {\r\n\r\n                const currentSection = Number(localStorage.getItem('currentSection'));\r\n                const getDirectionScroll = detectDirectionScroll(index, currentSection);\r\n\r\n                let top = 0;\r\n                // responsive design mobile\r\n                if (lastWidthScreen < 730) {\r\n                    if (getDirectionScroll){\r\n                        //down\r\n                        top = sections[index].top + navbarHeight;\r\n                    }  \r\n                    else{ // up\r\n                        top = sections[index].top;\r\n                    }\r\n                } else {\r\n                    //  full screen\r\n                    top = sections[index].top;\r\n                }\r\n\r\n                window.scroll({\r\n                    top,\r\n                    left: 0,\r\n                    behavior: \"smooth\"\r\n                });\r\n                // closeMenuNav();\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nconst closeMenuNav = () => {\r\n\r\n    const menuHamburger = document.querySelector(\".btn-hamburger\");\r\n    const nav = document.querySelector(\"nav\");\r\n\r\n    menuHamburger.classList.remove(\"open\");\r\n    nav.classList.remove(\"show-nav\");\r\n};\r\n\r\n/**\r\n* The function detects the direction of a scroll based on the current and previous options.\r\n* @param currentOption - The current scroll position or option being considered for direction\r\n* detection.\r\n* @param previusOption - The previous option refers to the previous value of an option or parameter\r\n* that is being compared to the current option in order to detect the direction of scroll.\r\n* @returns The function `detectDirectionScroll` is returning a boolean value indicating whether the\r\n* `currentOption` is greater than or equal to the `previusOption`.\r\n*/\r\nconst detectDirectionScroll = (\r\n    currentOption,\r\n    previusOption\r\n) => {\r\n    return currentOption >= previusOption;\r\n};\r\n\r\n\r\n\r\nwindow.addEventListener('load', () => {\r\n    window.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\r\n});\r\n\r\nconst run = () => {\r\n\r\n    ButtonHamburger.run();\r\n    MenuSticky.run();\r\n    // MenuHighlight.run();\r\n    // smoothScrollContent();\r\n}\r\n\r\nexport default {\r\n    run\r\n}","export default \"<aside class=\\\"sidebar\\\">\\r\\n  <div class=\\\"wrapper-avatar\\\">\\r\\n    <div class=\\\"container-avatar\\\">\\r\\n      <div class=\\\"img-avatar\\\"></div>\\r\\n    </div>\\r\\n    <div class=\\\"wrapper-trademark\\\">\\r\\n      <div class=\\\"container-trademark\\\">\\r\\n        <span class=\\\"text\\\">marjuz</span>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <nav class=\\\"menu\\\">\\r\\n    <ul class=\\\"navigation\\\">\\r\\n      <li class=\\\"option\\\"><a name=\\\"home\\\">Inicio</a></li>\\r\\n      <li class=\\\"option\\\"><a name=\\\"about\\\">Sobre mÃ­</a></li>\\r\\n      <li class=\\\"option\\\"><a name=\\\"skills\\\">Habilidades</a></li>\\r\\n      <li class=\\\"option\\\"><a name=\\\"portfolio\\\">Portafolio</a></li>\\r\\n      <li class=\\\"option\\\"><a name=\\\"resume\\\">FormaciÃ³n</a></li>\\r\\n      <li class=\\\"option\\\"><a name=\\\"contact\\\">Contacto </a></li>\\r\\n    </ul>\\r\\n  </nav>\\r\\n  <footer class=\\\"footer-sidebar\\\">\\r\\n    </div>\\r\\n    <ul class=\\\"social-media-list\\\">\\r\\n      <li class=\\\"github social-media-item\\\">\\r\\n        <a class=\\\"contact-icon\\\" href=\\\"https://github.com/marjuzdev\\\" target=\\\"_blank\\\">\\r\\n          <svg height=\\\"24\\\" width=\\\"24\\\" viewBox=\\\"0 0 432 416\\\">\\r\\n            <use xlink:href=\\\"svg/github.svg#github\\\" />\\r\\n          </svg>\\r\\n          <div class=\\\"overlay\\\"></div>\\r\\n        </a>\\r\\n      </li>\\r\\n      <li class=\\\"linkedin social-media-item\\\">\\r\\n        <a class=\\\"contact-icon\\\" href=\\\"https://www.linkedin.com/in/marioajuez\\\" target=\\\"_blank\\\">\\r\\n          <svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 20 20\\\">\\r\\n            <use xlink:href=\\\"svg/linkedin.svg#linkedin\\\" />\\r\\n          </svg>\\r\\n          <div class=\\\"overlay\\\"></div>\\r\\n        </a>\\r\\n      </li>\\r\\n\\r\\n      <li class=\\\"gmail social-media-item\\\">\\r\\n        <a class=\\\"contact-icon\\\" href=\\\"https://mail.google.com/mail/?view=cm&fs=1&to=marjuzdev@gmail.com\\\"\\r\\n          target=\\\"_blank\\\">\\r\\n          <svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 256 193\\\">\\r\\n            <use xlink:href=\\\"svg/gmail.svg#gmail-part1\\\" class=\\\"gmail-part1\\\" />\\r\\n            <use xlink:href=\\\"svg/gmail.svg#gmail-part2\\\" class=\\\"gmail-part2\\\" />\\r\\n            <use xlink:href=\\\"svg/gmail.svg#gmail-part3\\\" class=\\\"gmail-part3\\\" />\\r\\n            <use xlink:href=\\\"svg/gmail.svg#gmail-part4\\\" class=\\\"gmail-part4\\\" />\\r\\n            <use xlink:href=\\\"svg/gmail.svg#gmail-part5\\\" class=\\\"gmail-part5\\\" />\\r\\n          </svg>\\r\\n          <div class=\\\"overlay\\\"></div>\\r\\n        </a>\\r\\n      </li>\\r\\n    </ul>\\r\\n    <div class=\\\"separator\\\"></div>\\r\\n    <div class=\\\"copyright\\\">\\r\\n      <p> &copy; marjuz 2024. Todos los derechos reservados</p>\\r\\n    </div>\\r\\n  </footer>\\r\\n</aside>\\r\\n\\r\\n<!-- END FULL MENU - SIDE BAR  -->\\r\\n\\r\\n<!-- MENU HAMBURGER ONLY RESPONSIVE-->\\r\\n<div class=\\\"button-sticky\\\">\\r\\n  <div class=\\\"button-hamburger\\\">\\r\\n    <div class=\\\"line-1\\\"></div>\\r\\n    <div class=\\\"line-2\\\"></div>\\r\\n    <div class=\\\"line-3\\\"></div>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- END HAMBURGER ONLY RESPONSIVE-->\"","import './style.scss';\r\n\r\nconst body = document.querySelector('body');\r\n\r\n// import MenuBar from '@layout/MenuBar/MenuBar';\r\n// import MenuBarTemplate from '@layout/MenuBar/MenuBar.html?raw';\r\n// import '@layout/MenuBar/MenuBar.scss';\r\n// body.insertAdjacentHTML('afterbegin', MenuBarTemplate);\r\n// MenuBar.run();\r\n\r\n\r\nimport MenuBar from '@layout/MenuBar-2/MenuBar';\r\nimport MenuBarTemplate from '@layout/MenuBar-2/MenuBar.html?raw';\r\nimport '@layout/MenuBar-2/MenuBar.scss';\r\nbody.insertAdjacentHTML('afterbegin', MenuBarTemplate);\r\nMenuBar.run();"],"names":["run","menuHamburger","nav","ButtonHamburger","events","navbar","buttonSticky","menuList","offset","previousScrollY","event","currentScrollY","currentPositionScroll","navbarHeight","MenuSticky","e","section","MenuBar$1","MenuBarTemplate","body","MenuBar"],"mappings":"ssBACA,MAAMA,EAAM,IAAK,CAEb,MAAMC,EAAgB,SAAS,cAAc,mBAAmB,EAC1DC,EAAM,SAAS,cAAc,KAAK,EAExCD,EAAc,iBAAiB,QAAS,IAAM,CAC1CA,EAAc,UAAU,OAAO,MAAM,EACrCC,EAAI,UAAU,OAAO,UAAU,CACvC,CAAK,CACL,EAGeC,EAAA,CACf,IAAIH,CACJ,ECdMI,EAAS,CAAC,OAAQ,SAAU,QAAQ,EAG1C,IAAIC,EAAS,KACTC,EAAe,KACfC,EAAW,KAEf,MAAMP,EAAM,IAAM,CAEdK,EAAS,SAAS,cAAc,UAAU,EAC1CC,EAAe,SAAS,cAAc,gBAAgB,EACtDC,EAAW,SAAS,cAAc,OAAO,EAQzC,IAAIC,EAAS,EACTC,EAAkB,EAEtB,QAASC,KAASN,EACd,OAAO,iBAAiBM,EAAO,IAAM,CAGjC,GAAI,OAAO,WAAa,IAAK,CAGzB,MAAMC,EAAiB,SAAS,gBAA6B,UACvDC,EAAwBD,EAAiBF,EAE/CA,EAAkBE,EAClBH,GAAUI,EAEV,MAAMC,EAAeR,EAAO,aAGxBG,EAASK,IACTL,EAASK,GAITL,EAAS,IACTA,EAAS,GAIbH,EAAO,MAAM,IAAM,GAAG,CAAEG,MACxBF,EAAa,MAAM,IAAM,GAAKO,EAAeL,EAAU,MACvDD,EAAS,MAAM,IAAM,GAAKM,EAAeP,EAAa,aAAgB,KAGtF,MAGgBD,EAAO,MAAM,eAAe,KAAK,EACjCC,EAAa,MAAM,eAAe,KAAK,CAEvD,CAAS,CAET,EAMeQ,EAAA,CACf,IAAId,CACJ,GC/DEe,GAAM,CAEJ,MAAMX,EAAS,CAAC,OAAQ,QAAQ,EAEhC,UAAWM,KAASN,EAChB,OAAO,iBAAiBM,EAAO,IAAM,CAE7C,CAAS,CAET,GAAI,GCNFK,GAAM,CAEJ,MAAMX,EAAS,CAAC,OAAQ,QAAQ,EAEhC,UAAWM,KAASN,EAChB,OAAO,iBAAiBM,EAAO,IAAM,CAE7C,CAAS,CAET,MAIEK,GAAM,CAEJ,MAAMX,EAAS,CAAC,OAAQ,QAAQ,EAEhC,UAAWM,KAASN,EAChB,OAAO,iBAAiBM,EAAO,IAAM,CAEtB,MAAM,KAAK,SAAS,iBAAiB,SAAS,CAAC,EAAE,IAAIM,IACrD,CACH,KAAMA,EAAQ,aAAa,IAAI,EAC/B,IAAKA,EAAQ,SAChB,EACJ,EACc,SAAS,cAAc,UAAU,EAAE,YAC9D,CAAS,CAET,KAyEA,OAAO,iBAAiB,OAAQ,IAAM,CAClC,OAAO,SAAS,CAAE,IAAK,EAAG,KAAM,EAAG,SAAU,QAAQ,CAAE,CAC3D,CAAC,EAED,MAAMhB,EAAM,IAAM,CAEdG,EAAgB,IAAG,EACnBW,EAAW,IAAG,CAGlB,EAEeG,EAAA,CACX,IAAAjB,CACJ,EC9HekB,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;uCCEf,MAAMC,EAAO,SAAS,cAAc,MAAM,EAY1CA,EAAK,mBAAmB,aAAcD,CAAe,EACrDE,EAAQ,IAAK"}